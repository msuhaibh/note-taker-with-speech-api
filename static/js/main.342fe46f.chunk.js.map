{"version":3,"sources":["serviceWorker.js","components/Nav/Navbar.js","components/TextCommands/TextCommands.js","helpers/speechRecognitionHelper.js","components/VoiceCommands/VoiceCommands.js","components/ToDoItems/ToDoItems.js","components/Nav/Tabs.js","components/App/App.js","ui/theme/theme.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","AppBar","position","Toolbar","Typography","component","variant","color","TextCommands","props","addItem","e","preventDefault","noteContent","state","value","setState","handleChange","target","items","entries","onSubmit","this","TextField","id","label","multiline","fullWidth","rows","margin","onChange","Button","type","Component","speechRecognitionHelper","createSpeechRecognition","recognition","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","error","VoiceCommands","speechText","handleStartRecognition","start","listening","onstart","console","log","onend","handleStopRecognition","stop","notes","onresult","event","i","resultIndex","results","length","transcript","isFinal","document","getElementById","style","display","ref","ButtonGroup","aria-label","onClick","disabled","ToDoItems","createNoteItemDisplay","item","ListItem","className","key","ListItemText","text","ListItemSecondaryAction","IconButton","edge","delete","deleteItem","listItems","map","List","disablePadding","uuidv4","require","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","CustomTabs","newItem","prevState","concat","filteredItems","filter","newValue","Grid","container","direction","xs","Tabs","indicatorColor","textColor","centered","Tab","App","Fragment","CssBaseline","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","themeName","ReactDOM","render","ThemeProvider","theme","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.342fe46f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './Navbar.css';\r\nimport React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\">\r\n                    Note Taker With Speech Recognition Api\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React, {Component} from \"react\";\r\nimport './TextCommands.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass TextCommands extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: this.props.entries || [],\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    addItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        let noteContent = this.state.value;\r\n\r\n        this\r\n            .props\r\n            .addItem(noteContent);\r\n\r\n        this.setState({value: \"\"});\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Add New Note By Text</h2>\r\n\r\n                <form onSubmit={this.addItem}>\r\n                    <TextField\r\n                        id=\"outlined-multiline-static textNoteField\"\r\n                        label=\"Enter your note\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows=\"2\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextCommands;","const speechRecognitionHelper = {\r\n    createSpeechRecognition: function() {\r\n        try {\r\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n            const recognition = new SpeechRecognition();\r\n            recognition.continuous = false;\r\n            recognition.interimResults = true;\r\n            recognition.lang = 'en-GB';\r\n        \r\n            return recognition;\r\n        }\r\n        catch(error) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default speechRecognitionHelper;","import React, {Component} from \"react\";\r\nimport \"./VoiceCommands.css\";\r\nimport speechRecognitionHelper from \"../../helpers/speechRecognitionHelper.js\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass VoiceCommands extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: this.props.entries || [],\r\n            listening: false,\r\n            speechText: \"\"\r\n        };\r\n\r\n        this.recognition = speechRecognitionHelper.createSpeechRecognition();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.recognition === null) {\r\n            document.getElementById(\"SpeechRecognitionContainer\").style.display = \"none\";\r\n            document.getElementById(\"noBrowserSupport\").style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    addItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        let noteContent = this.state.speechText;\r\n\r\n        this.props.addItem(noteContent);\r\n\r\n        this.setState({speechText: \"\"});\r\n    }\r\n\r\n    handleStartRecognition = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.recognition.start();\r\n\r\n        this.setState({listening: true});\r\n\r\n        this.recognition.onstart = () => {\r\n            console.log(\"Voice recognition activated. Try speaking into the microphone.\");\r\n        }\r\n\r\n        this.recognition.onend = () => {\r\n            this.recognition.start();\r\n            console.log(\"Continue listening\");\r\n        }\r\n    }\r\n\r\n    handleStopRecognition = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.recognition.stop();\r\n\r\n        this.setState({listening: false});\r\n\r\n        this.recognition.onend = () => {\r\n            console.log(\"Voice recognition stopped via click\");\r\n        }\r\n\r\n        let notes = \"\";\r\n        this.recognition.onresult = (event) => {\r\n            for (let i = event.resultIndex; i < event.results.length; i++) {\r\n                const transcript = event.results[i][0].transcript;\r\n                if (event.results[i].isFinal) \r\n                    notes += transcript + ' ';\r\n                }\r\n            \r\n            this.setState({speechText: notes});\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({speechText: e.target.value});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4 id=\"noBrowserSupport\" ref=\"noBrowserSupport\">Sorry, Your Browser Doesn't\r\n                    Support the Web Speech API. Only User Input Notes Can Be Taken. Try Opening This\r\n                    Demo In Google Chrome for Speech Functionality.</h4>\r\n\r\n                <div id=\"SpeechRecognitionContainer\" ref=\"SpeechRecognitionContainer\">\r\n                    <h2>Add New Note By Speech</h2>\r\n\r\n                    <TextField\r\n                        value={this.state.speechText}\r\n                        onChange={this.handleChange}\r\n                        id=\"speechText\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows=\"2\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"/>\r\n                    <br/>\r\n\r\n                    <ButtonGroup variant=\"contained\" aria-label=\"full width contained button group\">\r\n                        <Button\r\n                            onClick={this.handleStartRecognition}\r\n                            id=\"startBtn\"\r\n                            disabled={this.state.listening}\r\n                            color=\"primary\">Start Recognition</Button>\r\n                        <Button\r\n                            onClick={this.handleStopRecognition}\r\n                            id=\"stopBtn\"\r\n                            disabled={!this.state.listening}\r\n                            color=\"secondary\">Stop Recognition</Button>\r\n                        <Button onClick={this.addItem} id=\"saveNoteBtn\" color=\"primary\">Save Note</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VoiceCommands;","import React, {Component} from \"react\";\r\nimport \"./ToDoItems.css\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass ToDoItems extends Component {\r\n    createNoteItemDisplay = (item) => {\r\n        return (\r\n            <ListItem component=\"li\" className=\"note-list-item\" key={item.key}>\r\n                <ListItemText>{item.text}</ListItemText>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => this.delete(item.key)} >\r\n                      <DeleteIcon/>\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    delete(key) {\r\n        this.props.deleteItem(key);\r\n    }\r\n\r\n    render() {\r\n        const toDoEntries = this.props.entries;\r\n        const listItems = toDoEntries.map(this.createNoteItemDisplay);\r\n\r\n        return (\r\n            listItems.length > 0 ? (\r\n                <div>\r\n                    <h2>Your Notes</h2>\r\n                    <List component=\"ul\" className=\"note-list\" disablePadding={true}>\r\n                        {listItems}\r\n                    </List>\r\n                </div>\r\n            ) : (<h2>You Have No Notes</h2> )\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoItems;","import React, {Component} from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TextCommands from '../TextCommands/TextCommands.js'\r\nimport VoiceCommands from '../VoiceCommands/VoiceCommands.js'\r\nimport ToDoItems from '../ToDoItems/ToDoItems.js'\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nfunction TabPanel(props) {\r\n    const {\r\n        children,\r\n        value,\r\n        index,\r\n        ...other\r\n    } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}>\r\n            <Box p={3}>{children}</Box>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {id: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}`};\r\n}\r\n\r\nclass CustomTabs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    addItem = (noteContent) => {\r\n        if (noteContent) {\r\n            const newItem = {\r\n                text: noteContent,\r\n                key: uuidv4()\r\n            }\r\n\r\n            this.setState((prevState) => {\r\n                return {\r\n                    items: prevState\r\n                        .items\r\n                        .concat(newItem)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteItem = (key) => {\r\n        const filteredItems = this\r\n            .state\r\n            .items\r\n            .filter(function (item) {\r\n                return (item.key !== key)\r\n            });\r\n\r\n        this.setState({items: filteredItems});\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({value: newValue})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12}>\r\n                        <Tabs\r\n                            value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            centered>\r\n                            <Tab label=\"Add By Speech\" {...a11yProps(0)}/>\r\n                            <Tab label=\"Add By Text\" {...a11yProps(1)}/>\r\n                            <Tab label=\"Your Notes\" {...a11yProps(2)}/>\r\n                        </Tabs>\r\n                    </Grid>\r\n                </Grid>\r\n                <TabPanel value={this.state.value} index={0}>\r\n                    <VoiceCommands entries={this.state.items} addItem={this.addItem}/>\r\n                </TabPanel>\r\n                <TabPanel value={this.state.value} index={1}>\r\n                    <TextCommands entries={this.state.items} addItem={this.addItem}/>\r\n                </TabPanel>\r\n                <TabPanel value={this.state.value} index={2}>\r\n                    <ToDoItems entries={this.state.items} deleteItem={this.deleteItem}/>\r\n                </TabPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomTabs;\r\n","import React from 'react';\r\nimport \"./App.css\";\r\nimport Navbar from '../Nav/Navbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CustomTabs from '../Nav/Tabs.js';\r\n\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline>\r\n                <Navbar/>\r\n                <CustomTabs />\r\n            </CssBaseline>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default App;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n  primary: { main: '#0D47A1', light: '#5472d3', dark: '#002171', contrastText: '#FFFFFF' },\r\n  secondary: { main: '#FF6F00', light: '#FFA040', dark: '#C43E00', contrastText: '#000000' }\r\n};\r\nconst themeName = 'Custom Theme';\r\n\r\nexport default createMuiTheme({ palette, themeName });","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './components/App/App.js';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport theme from './ui/theme/theme';\r\n\r\nReactDOM.render(<ThemeProvider theme={theme}><App /></ThemeProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}